 #
 # Copyright 1998-2009 Tony Bringardner
 #
 #   Licensed under the Apache License, Version 2.0 (the "License");
 #   you may not use this file except in compliance with the License.
 #   You may obtain a copy of the License at
 #
 #       http://www.apache.org/licenses/LICENSE-2.0
 #
 #   Unless required by applicable law or agreed to in writing, software
 #   distributed under the License is distributed on an "AS IS" BASIS,
 #   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 #   See the License for the specific language governing permissions and
 #   limitations under the License.
 #   
 #   
 #	@author Tony Bringardner   
 #	
 
 # A sample configuration file for java.util.logging
 # Use -Djava.util.logging.config.file=myfile 
 #
 #  Set the handlers
    handlers = java.util.logging.ConsoleHandler 
    
    
 # java.util.logging levels    
 #  SEVERE   The highest value; intended for extremely important messages (e.g. fatal program errors).  
 # 	WARNING  Intended for warning messages.  
 #	INFO  	 Informational runtime messages.  
 #	CONFIG   Informational messages about configuration settings/setup.  
 #	FINE  	 Used for greater detail, when debugging/diagnosing problems.  
 #	FINER  	 Even greater detail.  
 #	FINEST   The lowest value; greatest detail 
 #	ALL		 Log everything
 #  OFF		 Log nothing
 #
 # Here's how the levels translate
 #  BJL		JUL
 #---------------------------------
 # INFO  	INFO	logger.info(...)
 # WARN   	WARN	logger.warn(...)
 # DEBUG   	ALL		logger.debug(...)
 # ERROR 	SEVERE  logger.error(...)
 # NONE		OFF	
 # 


   # Set the default logging level for the root logger
    .level = INFO
    
    # Set the default logging level for new ConsoleHandler instances
    java.util.logging.ConsoleHandler.level = ALL
    
    # Set the default logging level for the logger named com.mycompany
    us.bringardner.level = INFO
    
#	The formatting can be customized by specifying the format string in the java.util.logging.SimpleFormatter.format property. 
#	The given LogRecord will be formatted as if by calling:
#                            1     2       3       4      5        6
#    String.format(format, date, source, logger, level, message, thrown);
	java.util.logging.SimpleFormatter.format=%1$tm-%1$td-%1$tY %1$tl:%1$tM:%1$tS.%1tL [main] %4$s %3$s - %5$s %6$s%n
#	For a complete description see https://docs.oracle.com/javase/8/docs/api/java/util/Formatter.html	
	 
	
